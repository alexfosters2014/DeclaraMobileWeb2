// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerDeclara.Datos;

#nullable disable

namespace ServerDeclara.Migrations
{
    [DbContext(typeof(DeclaraContext))]
    partial class DeclaraContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServerDeclara.Datos.BPC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("BPCs");
                });

            modelBuilder.Entity("ServerDeclara.Datos.BimensualRPF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AnticipoBimestre")
                        .HasColumnType("float");

                    b.Property<double>("AnticipoExcedente")
                        .HasColumnType("float");

                    b.Property<int>("DeclaracionMes1Id")
                        .HasColumnType("int");

                    b.Property<int>("DeclaracionMes2Id")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeclaracionMes1Id");

                    b.HasIndex("DeclaracionMes2Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("BimensualesRPFs");
                });

            modelBuilder.Entity("ServerDeclara.Datos.Comercio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreFantasia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Porcentaje")
                        .HasColumnType("float");

                    b.Property<string>("RUT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Suspendido")
                        .HasColumnType("bit");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Comercios");
                });

            modelBuilder.Entity("ServerDeclara.Datos.DeclaracionMensualIRPF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AnticipoMensual")
                        .HasColumnType("float");

                    b.Property<double>("AnticipoNF")
                        .HasColumnType("float");

                    b.Property<double>("AnticipoRetenciones")
                        .HasColumnType("float");

                    b.Property<double>("DeduccionCD")
                        .HasColumnType("float");

                    b.Property<double>("DeduccionCDCincuenta")
                        .HasColumnType("float");

                    b.Property<double>("DeduccionCJPPU")
                        .HasColumnType("float");

                    b.Property<double>("DeduccionFRL")
                        .HasColumnType("float");

                    b.Property<double>("DeduccionFonasa")
                        .HasColumnType("float");

                    b.Property<double>("DeduccionFondoSolidaridad")
                        .HasColumnType("float");

                    b.Property<double>("DeduccionFondoSolidaridadAdicional")
                        .HasColumnType("float");

                    b.Property<double>("DeduccionJubilatorio")
                        .HasColumnType("float");

                    b.Property<double>("DeduccionOtros")
                        .HasColumnType("float");

                    b.Property<double>("DeduccionSDMenoresCincuenta")
                        .HasColumnType("float");

                    b.Property<double>("DeduccionSDmenores")
                        .HasColumnType("float");

                    b.Property<double>("DeduccionTotal")
                        .HasColumnType("float");

                    b.Property<double>("DeduccionTotalDeducir")
                        .HasColumnType("float");

                    b.Property<double>("DeduccionTreintaPorciento")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<double>("IngDependenciaCess")
                        .HasColumnType("float");

                    b.Property<double>("IngDependenciaNoCess")
                        .HasColumnType("float");

                    b.Property<double>("IngIncrementoSeisPorciento")
                        .HasColumnType("float");

                    b.Property<int>("IngIndependiente")
                        .HasColumnType("int");

                    b.Property<double>("IngOtros")
                        .HasColumnType("float");

                    b.Property<double>("IngParaAnticipo")
                        .HasColumnType("float");

                    b.Property<double>("IngSalVacacional")
                        .HasColumnType("float");

                    b.Property<double>("IngTotalDependencia")
                        .HasColumnType("float");

                    b.Property<double>("IngTotalIndependiente")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("DeclaracionsMensualesIRPFs");
                });

            modelBuilder.Entity("ServerDeclara.Datos.EntradaIVADiario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComercioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<double>("MontoIVA")
                        .HasColumnType("float");

                    b.Property<double>("MontoIvaRetenido")
                        .HasColumnType("float");

                    b.Property<double>("MontoMasIVA")
                        .HasColumnType("float");

                    b.Property<double>("MontoTotal")
                        .HasColumnType("float");

                    b.Property<string>("NombreArchivoPDF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComercioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("EntradasIVAsDiarios");
                });

            modelBuilder.Entity("ServerDeclara.Datos.ParametrosIRPF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RangoDesde")
                        .HasColumnType("int");

                    b.Property<int>("RangoHasta")
                        .HasColumnType("int");

                    b.Property<int>("Tasa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ParametrosIRPFs");
                });

            modelBuilder.Entity("ServerDeclara.Datos.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdGoogle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ServerDeclara.Datos.BimensualRPF", b =>
                {
                    b.HasOne("ServerDeclara.Datos.DeclaracionMensualIRPF", "DeclaracionMes1")
                        .WithMany()
                        .HasForeignKey("DeclaracionMes1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerDeclara.Datos.DeclaracionMensualIRPF", "DeclaracionMes2")
                        .WithMany()
                        .HasForeignKey("DeclaracionMes2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerDeclara.Datos.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeclaracionMes1");

                    b.Navigation("DeclaracionMes2");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ServerDeclara.Datos.Comercio", b =>
                {
                    b.HasOne("ServerDeclara.Datos.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ServerDeclara.Datos.EntradaIVADiario", b =>
                {
                    b.HasOne("ServerDeclara.Datos.Comercio", "Comercio")
                        .WithMany()
                        .HasForeignKey("ComercioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerDeclara.Datos.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comercio");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
